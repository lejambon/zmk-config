#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define KP(k)       &kp k
#define HL(a,b,c,d) &hrm LCTRL a &hrm LALT b &hrm LGUI c &hrm LSHFT d
#define HR(a,b,c,d) &hrm RSHFT a &hrm RGUI b &hrm RALT c &hrm RCTRL d
#define L1(t)       &lt 1 t
#define L2(t)       &lt 2 t
#define BT(c)       &bt BT_##c
#define BOOT        &bootloader
#define _____       &trans
#define xxxxx       &none

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
                KP(J)       KP(G)       KP(M)       KP(P)       KP(V)           KP(SEMI)    KP(DOT)     KP(FSLH)    KP(SQT)     KP(DQT)
                HL(R,          S,          N,          D)       KP(B)           KP(COMMA)   HR(A,          E,          I,          H)
                KP(X)       KP(F)       KP(L)       KP(C)       KP(W)           KP(MINUS)   KP(U)       KP(O)       KP(Y)       KP(K)
                                                    KP(BSPC)    L1(T)           L2(SPACE)   KP(ENTER)
            >;
        };

        left {
            display-name = "left";
            bindings = <
                KP(Z)       KP(Q)       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                xxxxx       xxxxx       xxxxx       KP(LSHFT)   xxxxx           xxxxx       KP(RSHFT)   xxxxx       xxxxx       xxxxx
                KP(N1)      xxxxx       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                                                    xxxxx       _____           _____       xxxxx
            >;
        };


        right {
            display-name = "right";
            bindings = <
                xxxxx       xxxxx       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                xxxxx       xxxxx       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                KP(N2)      xxxxx       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                                                    xxxxx       _____           _____       xxxxx
            >;
        };

        both {
            display-name = "both";
            bindings = <
                BOOT        BT(SEL 0)   BT(SEL 1)   BT(SEL 2)   BT(CLR)         xxxxx       xxxxx       xxxxx       xxxxx       BOOT
                xxxxx       xxxxx       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                KP(N3)      xxxxx       xxxxx       xxxxx       xxxxx           xxxxx       xxxxx       xxxxx       xxxxx       xxxxx
                                                    xxxxx       _____           _____       xxxxx
            >;
        };
    };
};
